doctype html
html
    head
        meta(charset="utf-8")
    body
        script(src="/jwb/jquery-3.2.1.js")

        ul
            li(class="marked") html
            li css
            li(id="active") javascript
                ul
                    li javascript core
                    li(class="marked") dom
                    li(class="marked") bom

        script.
            // 경우 1
            var list = document.getElementsByClassName('marked');
            console.group('document');

            for (var i = 0; i < list.length; ++i)
            {
                console.log(list[i].textContent);
            }
            console.groupEnd();

            // 경우 2
            console.group('active');
            var active = document.getElementById('active');
            var list = active.getElementsByClassName('marked');
            for (var i = 0; i < list.length; ++i)
                console.log(list[i].textContent);
            console.groupEnd();
            // 속성 제어
        a(id="target" href="http://opentutorials.org") opentutorials
        script.
            var t = document.getElementById('target');
            console.log(t.getAttribute('id'));
            console.log(t.getAttribute('href'));

            // 속성을 바꿈.
            t.setAttribute('href', 'http://opentutorials.org/course/1');
            t.setAttribute('title', 'opent'); // 존재하지 않는 속성이면 추가.

            // 속성을 제거
            t.removeAttribute('title');

            // 속성 체크
            console.log(t.hasAttribute('title'));

            // 속성방식, 프로퍼티방식
            var target = document.getElementById('target');
            target.setAttribute('class', 'important'); // 속성 방식
            target.className = 'important'; // property 방식.
            // property 방식은 더 빠르긴 하나 조심해야 한다.
            // class -> className
            // for -> htmlFor
            // maxlength -> maxLength
            // javascript 의 명명규칙때문.

        a(id="target2" href="./demo1.html") ot
        script.
            var target = document.getElementById('target2');
            console.log(target.getAttribute('href');
            // 이거는 상대 경로 그대로 출력
            console.log(target.href);
            // 이거는 모든 경로가 다 출력

        // jQuery에서의 속성 제어 API
            attr 이라는 메소드 활용.
        a(id="target3" href="http://opentutorials.org") opentutorials
        script.
            var t = $('#target3');
            console.log(t.attr('href')); // http:// ~
            t.attr('title', 'opentut'); // 값을 설정.
            t.removeAttr('title'); // title attr를 삭제.

            // jQuery에서도 attr 과 prop의 차이를 제공.
            console.log(t.attr('href'));
            console.log(t.prop('href'));
        input(id="t2" type="checkbox" checked="checked")

        script.
            var t2 = $('#t2');
            console.log(t2.attr('checked')); // checked
            console.log(t2.prop('checked')); // true
        p
            div(id="t1") opentut1
            div(id="t3") opentut2
        script.
            $('#t1').prop('className', 'important');
            $('#t3').prop('class', 'current');
            // jQuery 가 내부적으로 className, class를 보정해준다.






