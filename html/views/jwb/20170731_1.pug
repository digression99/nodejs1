//
    lesson 69 - event -> inline
    인라인 단점 -> 태그에 직접 기술 -> 정보를 표현하는 수단이 html인데 그 원칙에 어긋남.

    lesson 70 -> property listener


doctype html
html
    head
        meta(charset="utf-8")
    body
        p inline
            input(type="button" id="target" onclick="alert('hello world, ' + document.getElementById('target').value);" value="button")
            input(type="button" onclick="alert('hello world, ' + this.value);" value="button2")
        // this를 쓰면 코드를 관리하기가 편하다 -> 자기 자신만 가리키면 되므로.

        p property listener
            // property listener
            input(type="button" id="target2" value="button")

        p add event listener
            input(type="button" id="target3" value="button")

        script(src="/jwb/jquery-3.2.1.js")

        script.
            var t = document.getElementById('target2');
            t.onclick = function(event) {
                //event.target -> event가 호출된 시점에서 event가 어디에서 발생했는지를 알려주는 property.
                alert('hello world, ' + event.target.value);
                console.dir(event); // event객체의 여러 property를 탐색할 수 있게
                // -> MouseEvent -> 마우스의 위치 등 여러가지 정보를 리턴한다.

                // ie 8 이하에서는 작동하지 않는다. event가 전역 객체, event.target이 없다.
                // -> console.log(window.event); 로.
                // var event = event || window.event; -> event 가 있다면 그걸 쓰고 아니면 window.event를 사용한다.
                // event.target -> srcElement로. ==> var target = event.target || srcElement;
            }

            var t2 = document.getElementById('target3');
            t2.addEventListener('click', function(event) {
                alert('hello world, ' + event.target.value);
                // addEventListener 방식.
                // 이 방식의 장점은 복수의 동일 이벤트 타입 리스너를 등록할 수 있다는 점.
            });
            t2.addEventListener('click', function(event) {
                alert('123');
                // 순서대로 실행된다.
            });
            // ie 8 이하에서는 attachEvent를 사용해야.
            // -> if (t.addEventListener) { ...
            // else if (t.attachEvent) {
            // t.attachEvent('onclick', function(event) { ...

            // event listener를 여러개의 버튼에 등록
            // function btn_listener(event) {
            // switch(event.target.id) {
            // case 'target1' :
            //      alert(1);
            //      break;
            // case 'target2' :
            //      alert(2);
            //      break;
            // t1.addEventListener('click', btn_listener);
            // t2.addEventListener('click', btn_listener);
















